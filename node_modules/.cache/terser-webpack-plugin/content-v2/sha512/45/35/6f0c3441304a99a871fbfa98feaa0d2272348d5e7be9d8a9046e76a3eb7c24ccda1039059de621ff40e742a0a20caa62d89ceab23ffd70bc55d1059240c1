{"map":"{\"version\":3,\"sources\":[\"/Users/jr1307/my-git/movie-app/src/movie.js\",\"/Users/jr1307/my-git/movie-app/src/App.js\",\"/Users/jr1307/my-git/movie-app/src/serviceWorker.js\",\"/Users/jr1307/my-git/movie-app/src/index.js\"],\"names\":[\"Movie\",\"_ref\",\"title\",\"poster\",\"genres\",\"synopsis\",\"react_default\",\"a\",\"createElement\",\"className\",\"MoviePoster\",\"alt\",\"map\",\"genre\",\"index\",\"MovieGenre\",\"key\",\"lib_default\",\"text\",\"maxLine\",\"ellipsis\",\"trimRight\",\"basedOn\",\"_ref2\",\"src\",\"_ref3\",\"PropTypes\",\"string\",\"isRequired\",\"array\",\"App\",\"state\",\"_renderMoives\",\"_this\",\"movies\",\"movie\",\"console\",\"log\",\"src_movie_0\",\"title_english\",\"medium_cover_image\",\"id\",\"_getMovies\",\"_callee\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"_callApi\",\"sent\",\"setState\",\"stop\",\"this\",\"fetch\",\"then\",\"potato\",\"json\",\"data\",\"catch\",\"err\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"yVAKA,SAASA,EAATC,GAAiD,IAAjCC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,OAAQC,EAAUJ,EAAVI,SACnC,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACE,EAAD,CAAaP,OAAQA,EAAQQ,IAAKT,KAEtCI,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,KAAA,KAAKN,GACLI,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACVL,EAAOQ,IAAK,SAACC,EAAOC,GAAR,OAAkBR,EAAAC,EAAAC,cAACO,EAAD,CAAYF,MAAOA,EAAOG,IAAKF,OAElER,EAAAC,EAAAC,cAAA,IAAA,CAAGC,UAAU,mBACTH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACIW,KAAMb,EACNc,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,eAQhC,SAASZ,EAATa,GAAmC,IAAbpB,EAAaoB,EAAbpB,OAAQQ,EAAKY,EAALZ,IAC1B,OACIL,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,gBAAgBe,IAAKrB,EAAQQ,IAAKA,EAAKT,MAAOS,IAIrE,SAASI,EAATU,GAA4B,IAAPZ,EAAOY,EAAPZ,MACjB,OACIP,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,gBAAgBI,GAIxCb,EAAM0B,UAAY,CACdxB,MAAQwB,EAAAA,EAAUC,OAAOC,WACzBzB,OAASuB,EAAAA,EAAUC,OACnBvB,OAASsB,EAAAA,EAAUG,MAAMD,WACzBvB,SAAWqB,EAAAA,EAAUC,OAAOC,YAGhClB,EAAYgB,UAAY,CACpBvB,OAASuB,EAAAA,EAAUC,OAAOC,YAGf5B,IAAAA,EAAAA,ECDA8B,6MA5CdC,MAAQ,KAMRC,cAAgB,WAWf,OAVeC,EAAKF,MAAMG,OAAOtB,IAAI,SAAAuB,GAEpC,OADAC,QAAQC,IAAIF,GACL7B,EAAAC,EAAAC,cAAC8B,EAAD,CACPpC,MAAOiC,EAAMI,cACbpC,OAAQgC,EAAMK,mBACdxB,IAAKmB,EAAMM,GACXrC,OAAQ+B,EAAM/B,OACdC,SAAU8B,EAAM9B,gBAMlBqC,gCAAa,SAAAC,IAAA,IAAAT,EAAA,OAAAU,EAAArC,EAAAsC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACSf,EAAKgB,WADd,KAAA,EACNf,EADMY,EAAAI,KAEZjB,EAAKkB,SAAS,CACbjB,OAAAA,IAHW,KAAA,EAAA,IAAA,MAAA,OAAAY,EAAAM,SAAAT,EAAAU,WAObJ,SAAW,WACV,OAAOK,MAAM,yDACZC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKxB,SACvByB,MAAM,SAAAC,GAAG,OAAIxB,QAAQC,IAAIuB,yFA5B1BP,KAAKX,8CA+BG,IACAR,EAAWmB,KAAKtB,MAAhBG,OACR,OACC5B,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAWyB,EAAS,MAAQ,gBAC/BA,EAASmB,KAAKrB,gBAAkB,kBA1CnB6B,EAAAA,WCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,KAAK,SAAAoB,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport LinesEllipsis from 'react-lines-ellipsis';\\nimport './movie.css';\\n\\nfunction Movie({title, poster, genres, synopsis}){\\n    return (\\n        <div className=\\\"Movie\\\">\\n            <div className=\\\"Movie__Columns\\\">\\n                <MoviePoster poster={poster} alt={title}/>\\n            </div>\\n            <div className=\\\"Movie__Columns\\\">\\n                <h1>{title}</h1>\\n                <div className=\\\"Movie__Genres\\\">\\n                    {genres.map( (genre, index) => <MovieGenre genre={genre} key={index} /> )}\\n                </div>\\n                <p className=\\\"Movie__synopsis\\\">\\n                    <LinesEllipsis \\n                        text={synopsis}\\n                        maxLine='3'\\n                        ellipsis='...'\\n                        trimRight\\n                        basedOn='letters'\\n                    />\\n                </p>\\n            </div>\\n        </div>\\n    )\\n}\\n\\nfunction MoviePoster({poster, alt}){\\n    return (\\n        <img className=\\\"Movie__poster\\\" src={poster} alt={alt} title={alt} />\\n    )\\n}\\n\\nfunction MovieGenre({genre}){\\n    return (\\n        <span className=\\\"Movie__Genre\\\">{genre}</span>\\n    )\\n}\\n\\nMovie.PropTypes = {\\n    title : PropTypes.string.isRequired,\\n    poster : PropTypes.string,\\n    genres : PropTypes.array.isRequired,\\n    synopsis : PropTypes.string.isRequired\\n}\\n\\nMoviePoster.PropTypes = {\\n    poster : PropTypes.string.isRequired,\\n}\\n\\nexport default Movie\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport Movie from './movie';\\n\\nclass App extends Component {\\n\\t//Render : componentWillMount() -> render() -> componentDidMount()\\n\\t//Update componentWillReceiveProps() -> shouldComponentUpdate() -> componentWillUpdate() -> render() -> componentDidUpdate()\\n\\n\\tstate = {}\\n\\n\\tcomponentDidMount(){\\n\\t\\tthis._getMovies()\\n\\t}\\n\\n\\t_renderMoives = () => {\\n\\t\\tconst movies = this.state.movies.map(movie =>{\\n\\t\\t\\tconsole.log(movie);\\n\\t\\t\\treturn <Movie \\n\\t\\t\\ttitle={movie.title_english} \\n\\t\\t\\tposter={movie.medium_cover_image} \\n\\t\\t\\tkey={movie.id} \\n\\t\\t\\tgenres={movie.genres}\\n\\t\\t\\tsynopsis={movie.synopsis}\\n\\t\\t\\t/>\\n\\t\\t})\\n\\t\\treturn movies\\n\\t}\\n\\n\\t_getMovies = async () => {\\n\\t\\tconst movies = await this._callApi()\\n\\t\\tthis.setState({\\n\\t\\t\\tmovies\\n\\t\\t}) \\n\\t}\\n\\n\\t_callApi = () => {\\n\\t\\treturn fetch('https://yts.am/api/v2/list_movies.json?sort_by=rating')\\n\\t\\t.then(potato => potato.json())\\n\\t\\t.then(json => json.data.movies)\\n\\t\\t.catch(err => console.log(err))\\n\\t}\\n\\n\\trender() {\\n\\t\\tconst { movies } = this.state;\\n\\t\\treturn (\\n\\t\\t\\t<div className={movies ? \\\"App\\\" : \\\"App--loading\\\"}>\\n\\t\\t\\t\\t{movies ? this._renderMoives() : 'Loading'}\\n\\t\\t\\t</div>\\n\\t\\t);\\n\\t}\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,t,n){e.exports=n(30)},18:function(e,t,n){},22:function(e,t,n){},28:function(e,t,n){},30:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),s=n(4),i=n.n(s),o=(n(18),n(2)),c=n.n(o),l=n(5),u=n(6),m=n(7),p=n(10),v=n(8),d=n(11),g=(n(22),n(1)),f=n.n(g),h=n(9),_=n.n(h);n(28);function y(e){var t=e.title,n=e.poster,a=e.genres,s=e.synopsis;return r.a.createElement(\"div\",{className:\"Movie\"},r.a.createElement(\"div\",{className:\"Movie__Columns\"},r.a.createElement(w,{poster:n,alt:t})),r.a.createElement(\"div\",{className:\"Movie__Columns\"},r.a.createElement(\"h1\",null,t),r.a.createElement(\"div\",{className:\"Movie__Genres\"},a.map(function(e,t){return r.a.createElement(E,{genre:e,key:t})})),r.a.createElement(\"p\",{className:\"Movie__synopsis\"},r.a.createElement(_.a,{text:s,maxLine:\"3\",ellipsis:\"...\",trimRight:!0,basedOn:\"letters\"}))))}function w(e){var t=e.poster,n=e.alt;return r.a.createElement(\"img\",{className:\"Movie__poster\",src:t,alt:n,title:n})}function E(e){var t=e.genre;return r.a.createElement(\"span\",{className:\"Movie__Genre\"},t)}y.PropTypes={title:f.a.string.isRequired,poster:f.a.string,genres:f.a.array.isRequired,synopsis:f.a.string.isRequired},w.PropTypes={poster:f.a.string.isRequired};var M=y,b=function(e){function t(){var e,n;Object(u.a)(this,t);for(var a=arguments.length,s=new Array(a),i=0;i<a;i++)s[i]=arguments[i];return(n=Object(p.a)(this,(e=Object(v.a)(t)).call.apply(e,[this].concat(s)))).state={},n._renderMoives=function(){return n.state.movies.map(function(e){return console.log(e),r.a.createElement(M,{title:e.title_english,poster:e.medium_cover_image,key:e.id,genres:e.genres,synopsis:e.synopsis})})},n._getMovies=Object(l.a)(c.a.mark(function e(){var t;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n._callApi();case 2:t=e.sent,n.setState({movies:t});case 4:case\"end\":return e.stop()}},e,this)})),n._callApi=function(){return fetch(\"https://yts.am/api/v2/list_movies.json?sort_by=rating\").then(function(e){return e.json()}).then(function(e){return e.data.movies}).catch(function(e){return console.log(e)})},n}return Object(d.a)(t,e),Object(m.a)(t,[{key:\"componentDidMount\",value:function(){this._getMovies()}},{key:\"render\",value:function(){var e=this.state.movies;return r.a.createElement(\"div\",{className:e?\"App\":\"App--loading\"},e?this._renderMoives():\"Loading\")}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[12,2,1]]]);","extractedComments":[]}